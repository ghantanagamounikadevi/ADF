{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "blob_csv",
						"type": "DatasetReference"
					},
					"name": "sourceblobcsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Snowflake_tables_patientbackup",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PatientID as string,",
				"          Department as string,",
				"          CheckupDate as timestamp 'MM/dd/yyyy',",
				"          HeartRate as short,",
				"          BloodPressure as string,",
				"          BloodSugar as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceblobcsv",
				"sourceblobcsv derive(BP_Status = iif(toInteger(BloodPressure) > 140, \"HIGH\", iif(toInteger(BloodPressure) < 90, \"LOW\", \"NORMAL\")),",
				"          Sugar_Status = iif(toInteger(BloodPressure)>140,'HIGH','NORMAL')) ~> derivedColumn1",
				"filter1 derive(converteddate = toDate(CheckupDate)) ~> derivedColumn2",
				"derivedColumn1 filter(!isNull(PatientID)) ~> filter1",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}