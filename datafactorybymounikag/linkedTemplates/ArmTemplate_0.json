{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactorybymounikag"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"ls_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob'"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SNOWFLAKE_LEARNING_DB"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "snowflake_connection",
					"user": "mounika",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "SNOWFLAKE_LEARNING_DB",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				},
				"version": "1.1"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_container": {
						"type": "string",
						"defaultValue": "sales"
					},
					"param_folder": {
						"type": "string",
						"defaultValue": "patient"
					},
					"param_filename": {
						"type": "string",
						"defaultValue": "Client_data.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().param_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().param_folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().param_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "blob_csv",
								"type": "DatasetReference"
							},
							"name": "sourceblobcsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "blob_csv",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PatientID as string,",
						"          Department as string,",
						"          CheckupDate as date,",
						"          HeartRate as short,",
						"          BloodPressure as string,",
						"          BloodSugar as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceblobcsv",
						"sourceblobcsv derive(BP_Status = iif(toInteger(BloodPressure) > 140, \"HIGH\", iif(toInteger(BloodPressure) < 90, \"LOW\", \"NORMAL\")),",
						"          Sugar_Status = iif(toInteger(BloodPressure)>140,'HIGH','NORMAL')) ~> derivedColumn1",
						"derivedColumn1 filter(!isNan(toInteger(PatientID))) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/blob_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Patient_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceblobcsv": {
										"param_container": "sales",
										"param_folder": "patient",
										"param_filename": "Client_date.csv"
									},
									"sink1": {
										"param_container": "sales",
										"param_folder": "patient",
										"param_filename": "Client_data.csv"
									}
								},
								"linkedServiceParameters": {
									"sourceblobcsv": {
										"schemaLinkedService": {
											"param_container": "sales",
											"param_folder": "sales"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PatientID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PatientID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CheckupDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CheckupDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HeartRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HeartRate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BloodPressure",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BloodPressure",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BloodSugar",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BloodSugar",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "blob_csv",
								"type": "DatasetReference",
								"parameters": {
									"param_container": "sales",
									"param_folder": "patient",
									"param_filename": "Client_data.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_csv",
								"type": "DatasetReference",
								"parameters": {
									"param_container": "destination",
									"param_folder": "STG_PATIENT_VITALS",
									"param_filename": "Client_data.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/datasets/blob_csv')]"
			]
		}
	]
}